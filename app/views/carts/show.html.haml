.sec-banner.bg0.p-t-80.p-b-50.main-page
  .container
    - if @cart.line_items.present?
      .bg0.p-t-30.p-b-85
        .container
          .row
            .col-lg-10.col-xl-7.m-lr-auto
              .m-l-25.m-r--38.m-lr-0-xl.shopping-cart-table
                - if @cart.calculate_grand_total.to_i < 99000
                  = content_tag :div, I18n.t('voucher.freeship'), class: "alert alert-success"
                = form_for(@cart, method: :put) do |f|
                  .wrap-table-shopping-cart
                    %table.table-shopping-cart
                      %tr.table_head
                        %th.column-1
                          = I18n.t("page.cart.product")
                        %th.column-2
                        %th.column-3
                          = I18n.t("page.cart.price")
                        %th.column-4
                          = I18n.t("page.cart.quantity")
                        %th.column-5
                          = I18n.t("page.cart.total")
                      - @cart.line_items.includes(:stock).each do |line_item|
                        %tr.table_row
                          %td.column-1
                            %img.image-cart{:src => "https://d1monvl96vvqbd.cloudfront.net/color_images/color_images/"+("%09d" % line_item.stock.product.color_images.where(color_name: line_item.stock.color).first.id).gsub(/(\d)(?=(?:\d{3})+(?!\d))/, '\1/')+"/original/"+line_item.stock.product.color_images.where(color_name: line_item.stock.color).first.color_image_file_name}
                          %td.column-2
                            %span.title_item
                              = line_item.stock.product.title + " - #{I18n.t("page.product.size")}: " + line_item.stock.size
                            %div.show-for-mobile
                              - if line_item.stock.product.promotion_price.present?
                                .promotion-price
                                  = "#{I18n.t("page.cart.price")}: #{number_with_delimiter(line_item.stock.product.price.to_i, :delimiter => '.')} vnd"
                                %b
                                  = "#{I18n.t("page.cart.price")}: #{number_with_delimiter(line_item.stock.product.promotion_price.to_i, :delimiter => '.')} vnd"
                              - else
                                = "#{I18n.t("page.cart.price")}: #{number_with_delimiter(line_item.stock.product.price.to_i, :delimiter => '.')} vnd"
                            %div.show-for-mobile
                              = "#{I18n.t("page.cart.total")}: #{number_with_delimiter(line_item.total_price.to_i, :delimiter => '.')} VND"
                          %td.column-3
                            - if line_item.stock.product.promotion_price.present?
                              .promotion-price
                                = "#{number_with_delimiter(line_item.stock.product.price.to_i, :delimiter => '.')} vnd"
                              %b
                                = "#{number_with_delimiter(line_item.stock.product.promotion_price.to_i, :delimiter => '.')} vnd"
                            - else
                              = "#{number_with_delimiter(line_item.stock.product.price.to_i, :delimiter => '.')} vnd"
                          %td.column-4
                            = f.fields_for :line_items, line_item do |line|
                              .wrap-num-product.flex-w.m-l-auto.m-r-0
                                .btn-num-product-down.cl8.hov-btn3.trans-04.flex-c-m
                                  %i.fs-16.zmdi.zmdi-minus
                                = line.text_field :quantity, class: 'mtext-104 cl3 txt-center num-product'
                                .btn-num-product-up.cl8.hov-btn3.trans-04.flex-c-m
                                  %i.fs-16.zmdi.zmdi-plus
                          %td.column-5
                            = "#{number_with_delimiter(line_item.total_price.to_i, :delimiter => '.')} VND"
                      %tr.table_row
                        %td.column-1.column-voucher
                          = f.label :voucher_code, I18n.t("page.cart.voucher"), class: 'control-label'
                        %td.column-2{:colspan => "2"}
                          = f.text_field :voucher_code, autofocus: true, class: 'stext-111 cl2 plh3 size-100 input-txt'
                  .flex-w.flex-sb-m.bor15.p-t-18.p-b-15.p-lr-40.p-lr-15-sm
                    .flex-w.flex-m.m-r-20.m-tb-5
                    = f.hidden_field :id, { :value => @cart.code }
                    = submit_tag I18n.t("page.cart.update_cart"), class: 'flex-c-m stext-101 cl2 size-119 bg8 bor13 hov-btn3 p-lr-15 trans-04 pointer m-tb-10'
            .col-sm-10.col-lg-7.col-xl-5.m-lr-auto
              .bor10.p-lr-40.p-t-30.p-b-40.m-l-63.m-r-40.m-lr-0-xl.p-lr-15-sm.shopping-cart-table
                %h4.mtext-109.cl2.p-b-30
                  = I18n.t("page.cart.cart_total")
                .flex-w.flex-t.p-t-27.p-b-33
                  .size-208
                    %span.mtext-101.cl2
                      = "#{I18n.t("page.cart.total")}: "
                  .size-206.p-t-1.ml-lg-3
                    %span.mtext-110.cl2{ class: ('line-out' if @cart.voucher_code.present?) }
                      = "#{number_with_delimiter(@cart.total_price.to_i, :delimiter => '.')} VND"
                - if @cart.voucher_code.present?
                  .flex-w.flex-t.p-b-33
                    .size-208
                      %span.mtext-101.cl2
                        = "#{I18n.t("page.cart.voucher")}: "
                    .size-206.p-t-1.ml-lg-3
                      %span.mtext-110.cl2
                        = @cart.voucher_code
                  .flex-w.flex-t.p-b-33
                    .size-208
                      %span.mtext-101.cl2
                        = "#{I18n.t("page.cart.grand_total")}: "
                    .size-206.p-t-1.ml-lg-3
                      %span.mtext-110.cl2
                        = "#{number_with_delimiter(@cart.calculate_grand_total.to_i, :delimiter => '.')} VND"
                .flex-w.flex-t.p-b-33
                  .size-208
                    %span.mtext-101.cl2
                  .size-206.p-t-1.ml-lg-3
                    %h6
                      = I18n.t("page.product.fundiin", price: number_with_delimiter(@cart.total_price.to_i/3, :delimiter => '.')).html_safe
            .col-lg-10.col-xl-7.m-lr-auto.m-b-50
              .m-l-25.m-r--38.m-lr-0-xl.shopping-cart-table
                = form_for(@order) do |f|
                  .wrap-table-shopping-cart
                    - flash.each do |key, value|
                      = content_tag :div, value, class: "alert alert-#{key}" unless key == 'pixel'
                    .flex-w.flex-sb-m.bor15.p-t-18.p-b-15.p-lr-40.p-lr-15-sm
                      = f.label :first_name, I18n.t("user.first_name"), class: 'col-sm-3 control-label'
                      = f.text_field :first_name, autofocus: true, required: true, class: 'stext-111 cl2 plh3 size-126 input-txt', value: @order.first_name || current_user.try(:first_name)
                      = f.label :last_name, I18n.t("user.last_name"), class: 'col-sm-3 control-label'
                      = f.text_field :last_name, required: true, class: 'stext-111 cl2 plh3 size-126 input-txt', value: @order.last_name || current_user.try(:last_name)
                      = f.label :email, I18n.t("user.email"), class: 'col-sm-3 control-label'
                      = f.text_field :email, required: true, class: 'stext-111 cl2 plh3 size-126 input-txt', value: @order.email || current_user.try(:email)
                      = f.label :address, I18n.t("user.address"), class: 'col-sm-3 control-label'
                      = f.text_field :address, required: true, class: 'stext-111 cl2 plh3 size-126 input-txt', value: @order.address || current_user.try(:address)
                      = f.label :district, I18n.t("user.district"), class: 'col-sm-3 control-label'
                      = f.text_field :district, required: true, class: 'stext-111 cl2 plh3 size-126 input-txt', value: @order.district || current_user.try(:district)
                      = f.label :city, I18n.t("user.city"), class: 'col-sm-3 control-label'
                      = f.text_field :city, required: true, class: 'stext-111 cl2 plh3 size-126 input-txt', value: @order.city || current_user.try(:city)
                      = f.label :phone, I18n.t("user.phone"), class: 'col-sm-3 control-label'
                      = f.text_field :phone, required: true, class: 'stext-111 cl2 plh3 size-126 input-txt', value: @order.phone || current_user.try(:phone)
                      = f.label :note, I18n.t("user.note"), class: 'col-sm-3 control-label'
                      = f.text_field :note, class: 'stext-111 cl2 plh3 size-126 input-txt', value: @order.note
                      = f.hidden_field :id, { :value => @cart.code }
                      = f.hidden_field :tracking, { :value => @order.tracking }
                      = f.hidden_field :locale, { :value => @locale }
                    .flex-w.flex-sb-m.bor15.p-t-18.p-b-15.payment-method
                      = f.label :payment_method, I18n.t("order.payment_method"), class: 'col-sm-3 control-label payment_method font-weight-bold'
                      .col-sm-10
                        %div.row
                          = f.radio_button :payment_method, 'COD', class: 'radio-payment col-1', checked: @order.payment_method.nil? || @order.payment_method == 'COD'
                          %div.payment-image.col-2
                            = image_tag "COD.png", class: "mr-auto payment-cod"
                          = f.label :payment_method, I18n.t("page.cart.cod"), class: 'radio-payment-label ml-auto col-8 align-middle font-weight-bold', :value => 'COD'
                        %div.row
                          = f.radio_button :payment_method, 'Shopee pay', class: 'radio-payment col-1'
                          %div.payment-image.col-2
                            = image_tag "SPP.png", class: "mr-auto"
                          = f.label :payment_method, I18n.t("page.cart.spp_btn"), class: 'radio-payment-label ml-auto col-8 align-middle font-weight-bold', :value => 'COD'
                        %div.row
                          = f.radio_button :payment_method, 'vnpay', class: 'radio-payment col-1'
                          %div.payment-image.col-2
                            = image_tag "VNPAY.png", class: "mr-auto"
                          = f.label :payment_method, I18n.t("page.cart.vnpay_btn"), class: 'radio-payment-label ml-auto col-8 align-middle font-weight-bold', :value => 'VNpay'
                        %div.row
                          = f.radio_button :payment_method, 'momo', class: 'radio-payment col-1'
                          %div.payment-image.col-2{style: "width: 30px;"}
                            = image_tag "momo.jpg", class: "mr-auto"
                          = f.label :payment_method, I18n.t("page.cart.momo_btn"), class: 'radio-payment-label ml-auto col-8 align-middle font-weight-bold', :value => 'momo'
                        %div.row
                          = f.radio_button :payment_method, 'FUNDIIN', class: 'radio-payment col-1'
                          %div.payment-image.col-2
                            = image_tag "Fundiin.png", class: "mr-auto"
                          = f.label :payment_method, I18n.t("page.cart.fundiin_btn"), class: 'radio-payment-label ml-auto col-8 align-middle font-weight-bold', :value => 'FUNDIIN'
                          %div.fundiin-note
                            - if I18n.locale.to_s == "en"
                              %div
                                = I18n.t("page.cart.fundiin_note_event").html_safe
                                %br
                                = I18n.t("page.cart.fundiin_note_event_1").html_safe
                              %div
                                = I18n.t("page.cart.fundiin_note").html_safe
                            - elsif @body.present?
                              .row
                                .col-12
                                  = @body["title_text"]
                              %br
                              = @body["description"].html_safe
                        %br
                      .tranfer-content
                        .col-sm-12.control-label
                          = I18n.t("page.cart.transfer")
                          %br
                        .col-sm-12
                          = "#{I18n.t("page.cart.account_holder")}: Nguyễn Thị Anh Thư"
                        .col-sm-12
                          %br
                          = "#{I18n.t("page.cart.bank")}: VIB"
                        .col-sm-12
                          = "#{I18n.t("page.cart.bank_branch")}: #{I18n.t("page.cart.bank_branch_content")}"
                        .col-sm-12
                          = "#{I18n.t("page.cart.account_no")}: 604704060140143"
                        .col-sm-12
                          = I18n.t("page.cart.or")
                        .col-sm-12
                          = "#{I18n.t("page.cart.bank")}: Techcombank"
                        .col-sm-12
                          = "#{I18n.t("page.cart.bank_branch")}: #{I18n.t("page.cart.bank_branch_content")}"
                        .col-sm-12
                          = "#{I18n.t("page.cart.account_no")}: 10623456052016"
                        .col-sm-12
                          = I18n.t("page.cart.or")
                        .col-sm-12
                          = "#{I18n.t("page.cart.bank")}: BIDV"
                        .col-sm-12
                          = "#{I18n.t("page.cart.bank_branch")}: #{I18n.t("page.cart.bank_branch_content")}"
                        .col-sm-12
                          = "#{I18n.t("page.cart.account_no")}: 31010002337101"
                        .col-sm-12
                          %br
                          = "#{I18n.t("page.cart.content")}: #{I18n.t("page.cart.content_tranfer")}"
                    .flex-w.flex-sb-m.bor15.p-t-18.p-b-15.p-lr-40.p-lr-15-sm
                      .col-sm-3
                      .col-sm-6
                        %button.flex-c-m.cl0.size-116.bg3.bor14.hov-btn3.p-lr-15.trans-04.pointer{:name => "commit", :style => "display: block;", :type => "submit"}
                          %span.stext-101
                            = I18n.t("page.cart.proceed_to_checkout")
                          %br/
                          %span.note-ship
                            = I18n.t("page.cart.free_ship")
                      .col-sm-3
            .col-sm-10.col-lg-7.col-xl-5.m-lr-auto.m-b-50
:css
  .title-image-fundiin {
    width: 20%;
  }
  .fundiin-note {
    padding-left: 12.5%;
  }
  .payment-image {
    width: 50px;
    float: left;
  }
  .payment-image img {
    width:inherit;
  }

  .fundiin-note {
    font-size: 12px;
  }

  .show-for-mobile {
    display: none;
  }

  .image-cart {
    max-width: 50px
  }

  .note-ship {
    font-size: 9px
  }

  .payment-method {
      padding-left: 40px;
      padding-right: 40px;
    }

  @media only screen and (max-width: 600px) {

    .fundiin-note {
      padding-left: 6%;
    }

    .payment-method {
      padding-left: 0px;
      padding-right: 0px;
    }
    .radio-payment-label{
      padding: 0px;
    }
    .payment-image {
      padding: 0px;
    }
    .radio-payment{
      margin-right: 0px;
    }
    .payment-cod{
      width: 90% !important;
    }

    .show-for-mobile {
      display: block;
      padding-top: 5px;
    }  

    .table-shopping-cart {
      min-width: 100%
    }

    .table-shopping-cart .column-1 {
      padding-left: 10px;
    }

    .flex-sb-m {
      justify-content: center
    }

    .column-voucher {
      padding-right: 10px
    }

    .column-2 {
      padding-right: 10px;
    }

    .column-4 {
      padding-right: 10px;
    }

    .column-3 {
      display: none;
      padding-right: 10px;
    }

    .column-5 {
      display: none;
    }
  }

  .title_item {
    padding-bottom: 10px;
  }
:javascript
  function checktransfer(){
    if($("input[name='order[payment_method]']:checked").val() == 'TRANSFER') {
      $('.tranfer-content').show();
    } else {
      $('.tranfer-content').hide();
    }
  }

  function invalidMessage() {
    var locale = $("#order_locale").val();
    var mess = "";
    switch (locale) {
      case "vi": 
        return "Vui lòng điền vào trường này";
      case "en":
        return "Please fill out this filed";
    }
  }

  $(document).ready(function() {
    checktransfer();

    $("input[name='order[payment_method]']").change(function(){
      checktransfer();
    });

    $('#new_order input[type=text]').on('change invalid', function() {
        var textfield = $(this)[0];
        textfield.setCustomValidity('');
        
        if (!textfield.validity.valid) {
          textfield.setCustomValidity(invalidMessage());  
        }
    });
  });